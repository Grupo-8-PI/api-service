version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: ${HOST}
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: aej_hub_db
      MYSQL_USER: ${USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq-local
    restart: unless-stopped
    ports:
      - "5672:5672"     # porta AMQP (para conexão com Spring Boot)
      - "15672:15672"   # painel de gerenciamento
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api-service
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: prd
      HOST: ${HOST:-mysql-db}
      USER: ${USER}
      DB_PASSWORD: ${DB_PASSWORD}
      AWS_REGION: ${AWS_REGION}
      AWS_BUCKET: ${AWS_BUCKET}
      JWT_SECRET: ${JWT_SECRET}
      JWT_VALIDITY: ${JWT_VALIDITY}

      # Configuração do RabbitMQ para o Spring Boot
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: admin
      SPRING_RABBITMQ_PASSWORD: admin

    depends_on:
      - mysql
      - rabbitmq
    networks:
      - app-network

volumes:
  mysql_data:
    driver: local
  rabbitmq_data:
    driver: local

networks:
  app-network:
    driver: bridge
