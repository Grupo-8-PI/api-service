# ====================================
# CONFIGURAÇÃO DO BANCO DE DADOS (MySQL)
# ====================================
# Nome de usuário para conexão com o banco MySQL
USER=app_user
# Senha do usuário MySQL
DB_PASSWORD=senha_segura_123
# Senha root do MySQL (acesso administrativo)
DB_ROOT_PASSWORD=senha_root_456
# ====================================
# CONFIGURAÇÃO AWS
# ====================================
# Região AWS onde seu bucket S3 está localizado
AWS_REGION=us-east-1
# Nome do bucket S3 para armazenar imagens de capas de livros
AWS_BUCKET=meu-bucket-armazenamento-livros
# ====================================
# CONFIGURAÇÃO JWT
# ====================================
# Chave secreta para geração de tokens JWT (mínimo 256 bits recomendado)
# Gerar com: openssl rand -base64 64
JWT_SECRET=SuaChaveSecretaJWTAquiDeveTerPeloMenos256BitsParaSegurancaGereComComandoOpenSSLRandBase64
# Duração de validade do token JWT em milissegundos (86400000 = 24 horas)
JWT_VALIDITY=86400000
# ====================================
# CONFIGURAÇÃO RABBITMQ
# ====================================
# Nome do host do serviço RabbitMQ (use 'rabbitmq-local' para Docker Compose)
RABBITMQ_HOST=rabbitmq-local
# Porta do RabbitMQ (padrão: 5672)
RABBITMQ_PORT=5672
# Nome de usuário para autenticação no RabbitMQ
RABBITMQ_USERNAME=admin
# Senha para autenticação no RabbitMQ
RABBITMQ_PASSWORD=admin
# ====================================
# OBSERVAÇÕES
# ====================================
# - Copie este arquivo para .env e atualize com seus valores reais
# - Nunca faça commit do arquivo .env no controle de versão
# - Para produção, use senhas e segredos fortes
# - Gerar JWT_SECRET com: openssl rand -base64 64
# - Mantenha DB_ROOT_PASSWORD diferente de DB_PASSWORD por segurança
